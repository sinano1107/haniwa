rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 全てのアクセスをブロック
    match /{document=**} {
      allow read, write: if false;
    }

    function isAnyAuthenticated() {
      return request.auth.uid != null;
    }

    // groupsコレクション
    match /groups/{groupID} {
      function getGroup() {
        return get(/databases/$(database)/documents/groups/$(groupID))
      }

      allow create: if isAnyAuthenticated()
        && (request.resource.data.name is string && request.resource.data.name.size() <= 15)
        && request.resource.data.members is list
        && request.resource.data.createdAt == request.time

      allow read: if isAnyAuthenticated()
        && request.auth.uid in resource.data.members;

      match /members/{memberID} {
        allow update: if isAnyAuthenticated()
          && request.auth.uid in getGroup().data.members
          && request.auth.uid == memberID;
        
        allow read: if isAnyAuthenticated()
          && request.auth.uid in getGroup().data.members;
      }
    }
  }
}